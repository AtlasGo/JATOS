# Routes
# This file defines all application routes (Higher priority routes first)
# Order is important!
# ~~~~

### Publix ###

GET     /publix/:studyId/start                           @controllers.publix.PublixInterceptor.startStudy(request: Request, studyId: Long, batchId: Long ?= -1)
GET     /publix/:studyId/end                             @controllers.publix.PublixInterceptor.finishStudy(request: Request, studyId: Long, srid: Long, successful: Boolean ?= true, errorMsg: String ?= null)
GET     /publix/:studyId/abort                           @controllers.publix.PublixInterceptor.abortStudy(request: Request, studyId: Long, srid: Long, message: String ?= null)
POST    /publix/:studyId/heartbeat                       @controllers.publix.PublixInterceptor.heartbeat(request: Request, studyId: Long, srid: Long)
POST    /publix/:studyId/studySessionData                @controllers.publix.PublixInterceptor.setStudySessionData(request: Request, studyId: Long, srid: Long)
# Deprecated (June 2018)
GET     /publix/:studyId/nextComponent/start             @controllers.publix.PublixInterceptor.startNextComponent(request: Request, studyId: Long, srid: Long)
# Deprecated (June 2018): Start component by position
GET     /publix/:studyId/component/start                 @controllers.publix.PublixInterceptor.startComponentByPosition(request: Request, studyId: Long, position: Integer, srid: Long)
GET     /publix/:studyId/:componentId/start              @controllers.publix.PublixInterceptor.startComponent(request: Request, studyId: Long, componentId: Long, srid: Long)
GET     /publix/:studyId/:componentId/end                @controllers.publix.PublixInterceptor.finishComponent(request: Request, studyId: Long, componentId: Long, srid: Long, successful: Boolean ?= true, errorMsg: String ?= null)
GET     /publix/:studyId/:componentId/initData           @controllers.publix.PublixInterceptor.getInitData(request: Request, studyId: Long, componentId: Long, srid: Long)
PUT     /publix/:studyId/:componentId/resultData         @controllers.publix.PublixInterceptor.submitResultData(request: Request, studyId: Long, componentId: Long, srid: Long)
POST    /publix/:studyId/:componentId/resultData         @controllers.publix.PublixInterceptor.appendResultData(request: Request, studyId: Long, componentId: Long, srid: Long)
POST    /publix/:studyId/:componentId/log                @controllers.publix.PublixInterceptor.log(request: Request, studyId: Long, componentId: Long, srid: Long)

# Batch and group channel endpoints
GET     /publix/:studyId/batch/open                      @controllers.publix.ChannelInterceptor.openBatch(studyId: Long, srid: Long)
GET     /publix/:studyId/group/join                      @controllers.publix.ChannelInterceptor.joinGroup(studyId: Long, srid: Long)
GET     /publix/:studyId/group/reassign                  @controllers.publix.ChannelInterceptor.reassignGroup(studyId: Long, srid: Long)
GET     /publix/:studyId/group/leave                     @controllers.publix.ChannelInterceptor.leaveGroup(studyId: Long, srid: Long)


### Static resources ###

GET     /public/*file                                    controllers.publix.Assets.at(path = "/public", file)

# Study assets
GET     /publix/:studyId/:arbitrary/*file                @controllers.publix.StudyAssets.viaStudyPath(studyId: Long, arbitrary, file: String)
GET     /study_assets_root/*file                         @controllers.publix.StudyAssets.viaAssetsPath(file)
GET     /study_assets/*file                              @controllers.publix.StudyAssets.viaAssetsPath(file)
